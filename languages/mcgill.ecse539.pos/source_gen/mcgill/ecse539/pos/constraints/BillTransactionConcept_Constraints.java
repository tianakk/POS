package mcgill.ecse539.pos.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.Objects;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class BillTransactionConcept_Constraints extends BaseConstraintsDescriptor {
  public BillTransactionConcept_Constraints() {
    super(CONCEPTS.BillTransactionConcept$SX);
  }

  public static class TransactionId_Property extends BasePropertyConstraintsDescriptor {
    public TransactionId_Property(ConstraintsDescriptor container) {
      super(PROPS.transactionId$pMs7, container, false, false, true);
    }
    @Override
    public boolean validateValue(SNode node, Object propertyValue, CheckingNodeContext checkingNodeContext) {
      boolean result = staticValidateProperty(node, SPropertyOperations.castInteger(propertyValue));
      if (!(result) && checkingNodeContext != null) {
        checkingNodeContext.setBreakingNode(new SNodePointer("r:b9416114-2562-4294-a2e8-823e81b85f4e(mcgill.ecse539.pos.constraints)", "8371848013931870294"));
      }
      return result;
    }
    private static boolean staticValidateProperty(SNode node, final int propertyValue) {
      return ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(SNodeOperations.getParent(node), CONCEPTS.POS$hP), LINKS.transactions$OHqW)).where((it) -> Objects.equals(SPropertyOperations.getInteger(it, PROPS.transactionId$pMs7), propertyValue)).count() <= 1;
    }
  }
  public static class Year_Property extends BasePropertyConstraintsDescriptor {
    public Year_Property(ConstraintsDescriptor container) {
      super(PROPS.year$cIkr, container, false, false, true);
    }
    @Override
    public boolean validateValue(SNode node, Object propertyValue, CheckingNodeContext checkingNodeContext) {
      boolean result = staticValidateProperty(node, SPropertyOperations.castInteger(propertyValue));
      if (!(result) && checkingNodeContext != null) {
        checkingNodeContext.setBreakingNode(new SNodePointer("r:b9416114-2562-4294-a2e8-823e81b85f4e(mcgill.ecse539.pos.constraints)", "805204515197940277"));
      }
      return result;
    }
    private static boolean staticValidateProperty(SNode node, int propertyValue) {
      return propertyValue > 0;
    }
  }
  public static class Month_Property extends BasePropertyConstraintsDescriptor {
    public Month_Property(ConstraintsDescriptor container) {
      super(PROPS.month$cJvw, container, false, false, true);
    }
    @Override
    public boolean validateValue(SNode node, Object propertyValue, CheckingNodeContext checkingNodeContext) {
      boolean result = staticValidateProperty(node, SPropertyOperations.castInteger(propertyValue));
      if (!(result) && checkingNodeContext != null) {
        checkingNodeContext.setBreakingNode(new SNodePointer("r:b9416114-2562-4294-a2e8-823e81b85f4e(mcgill.ecse539.pos.constraints)", "805204515197916638"));
      }
      return result;
    }
    private static boolean staticValidateProperty(SNode node, int propertyValue) {
      return propertyValue > 0 && propertyValue < 13;
    }
  }
  public static class Day_Property extends BasePropertyConstraintsDescriptor {
    public Day_Property(ConstraintsDescriptor container) {
      super(PROPS.day$cPOV, container, false, false, true);
    }
    @Override
    public boolean validateValue(SNode node, Object propertyValue, CheckingNodeContext checkingNodeContext) {
      boolean result = staticValidateProperty(node, SPropertyOperations.castInteger(propertyValue));
      if (!(result) && checkingNodeContext != null) {
        checkingNodeContext.setBreakingNode(new SNodePointer("r:b9416114-2562-4294-a2e8-823e81b85f4e(mcgill.ecse539.pos.constraints)", "805204515197842392"));
      }
      return result;
    }
    private static boolean staticValidateProperty(SNode node, int propertyValue) {
      if (SPropertyOperations.hasValue(node, PROPS.month$cJvw, 1)) {
        return propertyValue > 0 && propertyValue < 32;
      } else if (SPropertyOperations.hasValue(node, PROPS.month$cJvw, 2)) {
        return propertyValue > 0 && propertyValue < 29;
      } else if (SPropertyOperations.hasValue(node, PROPS.month$cJvw, 3)) {
        return propertyValue > 0 && propertyValue < 32;
      } else if (SPropertyOperations.hasValue(node, PROPS.month$cJvw, 4)) {
        return propertyValue > 0 && propertyValue < 31;
      } else if (SPropertyOperations.hasValue(node, PROPS.month$cJvw, 5)) {
        return propertyValue > 0 && propertyValue < 32;
      } else if (SPropertyOperations.hasValue(node, PROPS.month$cJvw, 6)) {
        return propertyValue > 0 && propertyValue < 31;
      } else if (SPropertyOperations.hasValue(node, PROPS.month$cJvw, 7)) {
        return propertyValue > 0 && propertyValue < 32;
      } else if (SPropertyOperations.hasValue(node, PROPS.month$cJvw, 8)) {
        return propertyValue > 0 && propertyValue < 32;
      } else if (SPropertyOperations.hasValue(node, PROPS.month$cJvw, 9)) {
        return propertyValue > 0 && propertyValue < 31;
      } else if (SPropertyOperations.hasValue(node, PROPS.month$cJvw, 10)) {
        return propertyValue > 0 && propertyValue < 32;
      } else if (SPropertyOperations.hasValue(node, PROPS.month$cJvw, 11)) {
        return propertyValue > 0 && propertyValue < 31;
      } else {
        return propertyValue > 0 && propertyValue < 32;
      }
    }
  }
  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(PROPS.transactionId$pMs7, new TransactionId_Property(this));
    properties.put(PROPS.year$cIkr, new Year_Property(this));
    properties.put(PROPS.month$cJvw, new Month_Property(this));
    properties.put(PROPS.day$cPOV, new Day_Property(this));
    return properties;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept BillTransactionConcept$SX = MetaAdapterFactory.getConcept(0x7d3ecb5c844f43f0L, 0x98db2b52b269987bL, 0x2bec263502412da6L, "mcgill.ecse539.pos.structure.BillTransactionConcept");
    /*package*/ static final SConcept POS$hP = MetaAdapterFactory.getConcept(0x7d3ecb5c844f43f0L, 0x98db2b52b269987bL, 0x2bec2635023fda5bL, "mcgill.ecse539.pos.structure.POS");
  }

  private static final class PROPS {
    /*package*/ static final SProperty transactionId$pMs7 = MetaAdapterFactory.getProperty(0x7d3ecb5c844f43f0L, 0x98db2b52b269987bL, 0x2bec263502412da6L, 0x742ec769a7f36b62L, "transactionId");
    /*package*/ static final SProperty year$cIkr = MetaAdapterFactory.getProperty(0x7d3ecb5c844f43f0L, 0x98db2b52b269987bL, 0x2bec263502412da6L, 0xb2ca93d8be868deL, "year");
    /*package*/ static final SProperty month$cJvw = MetaAdapterFactory.getProperty(0x7d3ecb5c844f43f0L, 0x98db2b52b269987bL, 0x2bec263502412da6L, 0xb2ca93d8be868e3L, "month");
    /*package*/ static final SProperty day$cPOV = MetaAdapterFactory.getProperty(0x7d3ecb5c844f43f0L, 0x98db2b52b269987bL, 0x2bec263502412da6L, 0xb2ca93d8be868e9L, "day");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink transactions$OHqW = MetaAdapterFactory.getContainmentLink(0x7d3ecb5c844f43f0L, 0x98db2b52b269987bL, 0x2bec2635023fda5bL, 0x2c84f4c6bbf624f3L, "transactions");
  }
}
